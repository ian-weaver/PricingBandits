% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/policies.R
\name{PolicyEvaluation}
\alias{PolicyEvaluation}
\title{Evaluate Policies for Pricing Experiments}
\usage{
PolicyEvaluation(
  Policy,
  PricesTested,
  PurchaseDecisions,
  TestX,
  Knots,
  sigma2_y,
  BatchSize,
  BasisFunctions,
  GP,
  Mono,
  PrevAS
)
}
\arguments{
\item{Policy}{The policy function to evaluate.}

\item{PricesTested}{A vector of prices (values between 0 and 1) that have been tested so far in the experiment.}

\item{PurchaseDecisions}{A vector of associated purchase decisions for the prices tested.}

\item{TestX}{A set of prices (values between 0 and 1) to test.}

\item{Knots}{Knots for the basis functions used in monotonic policies.}

\item{sigma2_y}{Observation noise variance (must be less than 0.25).}

\item{BatchSize}{Number of consumers tested before an algorithm can update.}

\item{BasisFunctions}{Basis functions for monotonic Gaussian Process regression.}

\item{GP}{Logical; if TRUE, the policy relies on Gaussian Processes.}

\item{Mono}{Logical; if TRUE, evaluates a monotonic policy.}

\item{PrevAS}{A vector of previous action scores to use as a fallback in case of errors.}
}
\value{
A vector of action scores for the prices in `TestX`.
}
\description{
This function evaluates either monotonic or non-monotonic policies by executing them with
the provided parameters. For monotonic policies, it includes mechanisms to handle timeout
scenarios and fallback options.
}
