% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/policies.R
\name{NonMonoPolicyEval}
\alias{NonMonoPolicyEval}
\title{Evaluate Non-Monotonic Policies}
\usage{
NonMonoPolicyEval(
  Policy,
  PricesTested,
  PurchaseDecisions,
  TestX,
  sigma2_y,
  BatchSize,
  GP,
  PrevAS
)
}
\arguments{
\item{Policy}{The policy function to evaluate.}

\item{PricesTested}{A vector of prices (values between 0 and 1) that have been tested so far in the experiment.}

\item{PurchaseDecisions}{A vector of associated purchase decisions for the prices tested.}

\item{TestX}{A set of prices (values between 0 and 1) to test.}

\item{sigma2_y}{Observation noise variance (must be less than 0.25).}

\item{BatchSize}{Number of consumers tested before an algorithm can update.}

\item{GP}{Logical; if TRUE, the policy relies on Gaussian Processes.}

\item{PrevAS}{A vector of previous action scores to use as a fallback in case of errors.}
}
\value{
A vector of action scores for the prices in `TestX`.
}
\description{
This function evaluates a non-monotonic policy by executing it with the provided parameters.
If the policy relies on Gaussian Processes (GP) and encounters an error, it falls back to using
the action scores from the previous round.
}
